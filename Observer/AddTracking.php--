<?php

/**
 * CedCommerce
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the End User License Agreement(EULA)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://cedcommerce.com/license-agreement.txt
 *
 * @category  Ced
 * @package   Ced_GoodMarket
 * @author    CedCommerce Core Team <connect@cedcommerce.com>
 * @copyright Copyright CEDCOMMERCE(http://cedcommerce.com/)
 * @license   http://cedcommerce.com/license-agreement.txt
 */

namespace Ced\GoodMarket\Observer;

class AddTracking implements \Magento\Framework\Event\ObserverInterface
{
    public function __construct(
        \Ced\GoodMarket\Helper\Config $config,
        \Ced\GoodMarket\Model\OrderFactory $order,
        \Ced\GoodMarket\Model\AccountsFactory $account,
        \Ced\GoodMarket\Helper\Request $request
    )
    {
        $this->config = $config;
        $this->order= $order;
        $this->account=$account;
        $this->request=$request;
    }

    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        $autoDespatch=$this->config->getAutoDespatch();
        if($autoDespatch)
        {
            $event = $observer->getEvent();
            $track = $event->getTrack();
            if ($track && $track->getCarrierCode()) {
                $shipData = [];
                $courier_name = (string)$track->getTitle();
                $tracking_reference=$track->getNumber();
                $despatch_date=date("Y-m-d h:i:s");
                $earliest_date=$this->config->getOrderEarliestTime();
                $latest_date=$this->config->getOrderLatestTime();
                $shipment = $track->getShipment();
                $increment_id = $shipment->getOrder()->getIncrementId();
                $delivery_mapping=$this->config->getShipmentMapping();
                foreach ($delivery_mapping as $value)
                {
                    if($value['magento_carrier']==$courier_name)
                    {
                        $delivery_service=$value['goodmarket_carrier'];
                    }
                }
                $goodmarketOrder=$this->order->create()->load($increment_id, 'magento_increment_id');
                $order_number=$goodmarketOrder->getGoodMarketOrderId();
                $order_Data=json_decode($goodmarketOrder->getOrderData(),true);
                foreach ($order_Data['items'] as $items)
                {
                    $item_arr[]=["code"=>$items['product_code'],'qty'=>$items['qty']];
                }
                $accountData=$this->account->create()->load($goodmarketOrder->getAccountCode(),'account_code');

                $params=['order_number'=>$order_number,
                    'delivery_service'=>$delivery_service,
                    'courier_name'=>$courier_name,
                    'despatch_date'=>$despatch_date,
                    'earliest_delivery'=>$earliest_date,
                    'latest_delivery'=>$latest_date,
                    'tracking_reference'=>$tracking_reference,
                    'item_arr'=>$item_arr,
                    'mode'=>$accountData->getMode()
                ];

                $response=$this->request->orderEvent($accountData->getData(),$params);
                if($response['success'])
                {
                    $goodmarketOrder->setStatus('Shipped');
                    $goodmarketOrder->save();
                }

            }
        }
    }
}
